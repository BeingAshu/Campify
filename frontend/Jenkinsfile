pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_TAG', defaultValue: 'latest', description: 'Setting Docker Image tag for push')
    }

    stages {
        stage('Validate Parameters') {
            steps {
                script {
                    if (params.DOCKER_TAG.trim() == '') {
                        error('Docker tag must be provided')
                    }
                }
            }
        }

        stage('Code Checkout') {
            steps {
                git branch: 'Windows', url: 'https://github.com/BeingAshu/Campify.git'
            }
        }

        stage('Docker Image Build') {
            steps {
                dir('frontend') {
                    bat "docker build -t frontend:${params.DOCKER_TAG} ."
                }
            }
        }

        stage('Docker Push to DockerHub') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub',
                        usernameVariable: 'Dockerhubuser',
                        passwordVariable: 'Dockerhubpass'
                    )]) {
                        bat "docker image tag frontend:${params.DOCKER_TAG} %Dockerhubuser%/campify-frontend:${params.DOCKER_TAG}"
                        bat "docker login -u %Dockerhubuser% -p %Dockerhubpass%"
                        bat "docker push %Dockerhubuser%/campify-frontend:${params.DOCKER_TAG}"
                    }
                }
            }
        }

        stage('Run Container on Docker Network') {
            steps {
                script {
                    def containerName = "campify-frontend"
                    def networkName = "campify-network"
                    def imageTag = "${params.DOCKER_TAG}"

                    // Create network if it doesn't exist
                    bat "docker network ls | findstr /I ${networkName} || docker network create ${networkName}"

                    // Stop and remove container if it exists
                    bat """
                        for /f %%i in ('docker ps -a -q --filter "name=${containerName}"') do (
                            docker stop ${containerName}
                            docker rm ${containerName}
                        )
                    """

                    // Run the new container
                    bat "docker run -d --name ${containerName} --network ${networkName} -p 3000:3000 %Dockerhubuser%/campify-frontend:${imageTag}"
                }
            }
        }
    }
}
