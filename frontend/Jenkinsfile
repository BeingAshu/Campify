pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_TAG', defaultValue: 'latest', description: 'Setting Docker Image tag for push')
    }

    stages {
        stage('Validate Parameters') {
            steps {
                script {
                    if (params.DOCKER_TAG.trim() == '') {
                        error('Docker tag must be provided')
                    }
                }
            }
        }

        stage('Code Checkout') {
            steps {
                git branch: 'Windows', url: 'https://github.com/BeingAshu/Campify.git'
            }
        }

        stage('Docker Image Build') {
            steps {
                dir('frontend') {
                    bat "docker build -t frontend:${params.DOCKER_TAG} ."
                }
            }
        }

        stage('Docker Push to DockerHub') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub',
                        usernameVariable: 'Dockerhubuser',
                        passwordVariable: 'Dockerhubpass'
                    )]) {
                        bat "docker image tag frontend:${params.DOCKER_TAG} %Dockerhubuser%/campify-frontend:${params.DOCKER_TAG}"
                        bat "docker login -u %Dockerhubuser% -p %Dockerhubpass%"
                        bat "docker push %Dockerhubuser%/campify-frontend:${params.DOCKER_TAG}"
                    }
                }
            }
        }

        stage('Run Container on Docker Network') {
            steps {
                script {
                    def containerName = "campify-frontend"
                    def networkName = "campify"

                    // Create Docker network if not exists
                    bat """
                        docker network ls | findstr /I "%networkName%" || docker network create %networkName%
                    """

                    // Stop and remove existing container if it exists
                    bat """
                        docker ps -a -q --filter "name=%containerName%" | findstr . && (
                            docker stop %containerName%
                            docker rm %containerName%
                        ) || echo No existing container to remove
                    """

                    // Run new container
                    bat """
                        docker run -d --name %containerName% --network %networkName% -p 5000:5000 %Dockerhubuser%/campify-frontend:${params.DOCKER_TAG}
                    """
                }
            }
        }
    }
}
